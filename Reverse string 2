char * reverseStr(char * s, int k)
{
    int size = strlen(s);
    int start;
    int end;
    char temp;
    int after_size;
    if(size < k)
    {
        start = 0;
        end = size-1;
        while(start < end)
        {
            temp = s[start];
            s[start] = s[end];
            s[end] = temp;
			start++;
			end--;
        }
		return s;
    }
	start = 0;
    end = k-1;
    for(int i=0;i<size;i = i+(2*k))
    {	
        after_size = size - i;
        if(after_size >= 2 * k)
        {
			int startin = start;
			int endin = end;
            while(startin < endin)
            {
                temp = s[startin];
                s[startin] = s[endin];
                s[endin] = temp;
				startin++;
				endin--;
            }
            start = start + ((2 * k));
            end = start + (k - 1);
			continue;
        }
        else if(after_size < (2 * k) && after_size >= k)
        {
			int startin = start;
			int endin = end;
            while(startin < endin)
            {
                temp = s[startin];
                s[startin] = s[endin];
                s[endin] = temp;
				startin++;
				endin--;
            }
			continue;
        }
        else if(after_size < k)
        {
            end = size-1;
            while(start < end)
            {
                temp = s[start];
                s[start] = s[end];
                s[end] = temp;
				start++;
				end--;
            }
			continue;
        }         
    }
    return s;
}
